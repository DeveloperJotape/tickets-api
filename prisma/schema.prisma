generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String     @id @default(uuid())
  name            String
  cpf             String     @unique
  email           String     @unique
  password        String
  position        Position
  status          UserStatus @default(ACTIVE)
  Access          Access?    @relation(fields: [accessId], references: [id])
  accessId        String
  // Relacionamentos inversos
  TicketsCreated  Ticket[]   @relation("TicketsCreated")
  TicketsAssigned Ticket[]   @relation("TicketsAssigned")
  created_at      DateTime   @default(now())
  updated_at      DateTime   @updatedAt
}

model Access {
  id         String   @id @default(uuid())
  name       String   @unique
  User       User[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Ticket {
  id           String   @id @default(uuid())
  title        String
  description  String
  status       Status
  priority     Priority
  // Usuário que criou o ticket
  CreatedBy    User     @relation("TicketsCreated", fields: [createdById], references: [id])
  createdById  String
  // Usuário responsável pelo ticket
  AssignedTo   User     @relation("TicketsAssigned", fields: [assignedToId], references: [id])
  assignedToId String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

//Enums
enum Position {
  TECHNOLOGY
  ACCOUNTING
  SALES
  LEGAL
  MARKETING
}

enum Status {
  OPEN
  IN_PROGRESS
  CLOSED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum UserStatus {
  ACTIVE
  INACTIVE
}
